/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

//Layer definitions
#define BASE 0
#define RAISE 1
#define LOWER 2
#define AOE 3
#define AOERAISE 4
#define MINE 5
#define MINERAISE 6
#define ADJUST 7

/ {
    behaviors {
        hm_cs: ctrl_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_CTRL_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hm_ag: alt_gui {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_ALT_GUI";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
            compatible = "zmk,keymap";

            base {
// GASC home row mods. Layer key mods. Mod tap for zxcv. Mod tap for backspace/shift
// -----------------------------------------------------------------------------------------
// |    |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |      |
// |    |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '   |
// |    |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | CAPS |
//                       | TAB | LWR | SPC |   | ENT | RSE | BSPC|
//                             | ESC |               | DEL |
        bindings = <
    &none   &kp Q           &kp W           &kp E           &kp R           &kp T       /**/    &kp Y           &kp U           &kp I           &kp O           &kp P               &none
    &none   &hm_ag LGUI A   &hm_ag LALT S   &hm_cs LSHFT D  &hm_cs LCTRL F  &kp G       /**/    &kp H           &hm_cs LCTRL J  &hm_cs LSHFT K  &hm_ag LALT L   &hm_ag LGUI SEMI    &kp SQT
    &none   &hm_ag LC(Z) Z  &hm_ag LC(X) X  &hm_ag LC(C) C  &hm_ag LC(V) V  &kp B       /**/    &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH            &kp CAPS
                                            &kp TAB         &lt LOWER ESC   &kp SPACE   /**/    &mt LSHFT BSPC  &lt RAISE DEL   &kp ENTER
                        >;
            };
            raise {
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  DEL |
// |      | HME | PGU | PGD | END | XXX |   | XXX | LFT | DWN |  UP | RGT |      |
// |      | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 | CAPS |
//                    |     |     |     |   |     |     |     |
        bindings = <
    &trans  &kp N1              &kp N2              &kp N3              &kp N4              &kp N5      /**/    &kp N6  &kp N7              &kp N8              &kp N9          &kp N0              &trans
    &trans  &hm_ag LGUI HOME    &hm_ag LALT PG_UP   &hm_cs LSHFT PG_DN  &hm_cs LCTRL END    &none       /**/    &none   &hm_cs LCTRL LEFT   &hm_cs LSHFT DOWN   &hm_ag LALT UP  &hm_ag LGUI RIGHT   &trans
    &trans  &kp F1              &kp F2              &kp F3              &kp F4              &kp F5      /**/    &kp F6  &kp F7              &kp F8              &kp F9          &kp F10             &trans
                                                    &trans              &mo ADJUST          &trans      /**/    &trans  &trans              &trans
                        >;
            };

            lower {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  {  |  }  | DEL  |
// |      |  -  |  _  |  =  |  +  |  `  |   |  ~  |  (  |  )  |  [  |  ]  |      |
// |      | Und | Cut | Cpy | Pst |     |   | PLY |  V+ |  V- | MTE |  \  |      |
//                    |     |     |     |   |     |     |     |
        bindings = <
    &trans  &kp EXCL   &kp AT       &kp HASH    &kp DOLLAR  &kp PERCENT /**/    &kp CARET           &kp AMPS        &kp STAR        &kp LBRC    &kp RBRC    &trans
    &trans  &kp MINUS  &kp UNDER    &kp EQUAL   &kp PLUS    &kp GRAVE   /**/    &kp TILDE           &kp LPAR        &kp RPAR        &kp LBKT    &kp RBKT    &trans
    &trans  &kp LC(Z)  &kp LC(X)    &kp LC(C)   &kp LC(V)   &none       /**/    &kp C_PLAY_PAUSE    &kp C_VOL_UP    &kp C_VOL_DN    &kp C_MUTE  &kp BSLH    &trans
                                    &trans      &trans      &trans      /**/    &trans              &mo ADJUST      &trans
                        >;
            };
            aoe {
// -------------------------------------   -------------------------------------
// | ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BSPC|
// | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '  |
// | CTRL|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | CAPS|
//                   | LALT| AOER|SH/SP|   |LSHFT| XXX | DEL |
// -------------------------------------   -------------------------------------
        bindings = <
    &kp ESC     &kp Q   &kp W   &kp E       &kp R               &kp T           /**/    &kp Y       &kp U       &kp I       &kp O   &kp P       &kp BSPC
    &kp TAB     &kp A   &kp S   &kp D       &kp F               &kp G           /**/    &kp H       &kp J       &kp K       &kp L   &kp SEMI    &kp SQT
    &kp LCTRL   &kp Z   &kp X   &kp C       &kp V               &kp B           /**/    &kp N       &kp M       &kp COMMA   &kp DOT &kp FSLH    &kp CAPS
                                &kp LALT    &lt AOERAISE ESC    &mt LSHFT SPACE /**/    &kp LSHFT   &none       &kp DEL
                    >;
            };
            aoeraise {
// -------------------------------------   -------------------------------------
// |  0  |  1  |  2  |  3  |  4  |  5  |   |     |     |     |     |     |     |
// |LS(0)|LS(1)|LS(2)|LS(3)|LS(4)|LS(5)|   |     |     |     |     |     |     |
// |SC(G)|SC(Q)|SC(W)|SC(E)|SC(R)|SC(T)|   |     |     |     |     |     |     |
//                   |     |     |     |   |     | ADJ |     |
// -------------------------------------   -------------------------------------
        bindings = <
    &kp N0          &kp N1          &kp N2          &kp N3          &kp N4          &kp N5          /**/    &trans      &trans      &trans  &trans  &trans  &trans
    &kp LS(N0)      &kp LS(N1)      &kp LS(N2)      &kp LS(N3)      &kp LS(N4)      &kp LS(N5)      /**/    &trans      &trans      &trans  &trans  &trans  &trans
    &kp LS(LC(G))   &kp LS(LC(Q))   &kp LS(LC(W))   &kp LS(LC(E))   &kp LS(LC(R))   &kp LS(LC(T))   /**/    &trans      &trans      &trans  &trans  &trans  &trans
                                                    &trans          &trans          &trans          /**/    &trans      &mo ADJUST  &trans
                    >;
            };
            mine {
// -------------------------------------   -------------------------------------
// |  `  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BSPC|
// | CTRL|  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '  |
// |  @  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | CAPS|
//                   |SHIFT| MNRS|SPACE|   |LSHFT| XXX |ENTER|
// -------------------------------------   -------------------------------------
        bindings = <
    &kp GRAVE   &kp Q   &kp W   &kp E       &kp R               &kp T           /**/    &kp Y           &kp U   &kp I       &kp O       &kp P       &none
    &kp LCTRL   &kp A   &kp S   &kp D       &kp F               &kp G           /**/    &kp H           &kp J   &kp K       &kp L       &kp SEMI    &kp SQT
    &kp AT      &kp Z   &kp X   &kp C       &kp V               &kp B           /**/    &kp N           &kp M   &kp COMMA   &kp DOT     &kp FSLH    &kp CAPS
                                &kp LSHFT   &lt MINERAISE ESC   &kp SPACE       /**/    &mt LSHFT BSPC  &kp DEL &kp ENTER
                    >;
            };
            mineraise {
// -------------------------------------   -------------------------------------
// | F3  |  1  |  2  |  3  |  4  |  5  |   |     |     |     |     |     |     |
// | F5  |  6  |  7  |  8  |  9  |  0  |   |     |     |     |     |     |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
//                   |     |     |     |   |     | ADJ |     |
// -------------------------------------   -------------------------------------
        bindings = <
    &kp F3      &kp N1      &kp N2  &kp N3  &kp N4  &kp N5  /**/    &trans      &trans      &trans  &trans  &trans  &trans
    &kp F5      &kp N6      &kp N7  &kp N8  &kp N9  &kp N0  /**/    &trans      &trans      &trans  &trans  &trans  &trans
    &trans      &trans      &trans  &trans  &trans  &trans  /**/    &trans      &trans      &trans  &trans  &trans  &trans
                                    &trans  &trans  &trans  /**/    &trans      &mo ADJUST  &trans
                    >;
            };
            adjust {
// -------------------------------------   -------------------------------------
// |RESET|     |     |     |     |     |   |     |     |     |     |     |     |
// |     |     |BTCLR| BT1 | BT2 |SG(L)|   |SG(R)|LG(L)|LG(D)|LG(U)|LG(R)|     |
// |SG(S)|     |     |     | AOE | MINE|   |     | BASE|     |     |     |     |
//                   |     |     |     |   |     |     |     |
// -------------------------------------   -------------------------------------
        bindings = <
    &bootloader     &none   &none       &none           &none           &none               /**/    &none               &none           &none           &none       &none           &none
    &none           &none   &bt BT_CLR  &bt BT_SEL 1    &bt BT_SEL 2    &kp LG(LS(LEFT))    /**/    &kp LG(LS(RIGHT))   &kp LG(LEFT)    &kp LG(DOWN)    &kp LG(UP)  &kp LG(RIGHT)   &none
    &kp LG(LS(S))   &none   &none       &none           &to AOE         &to MINE            /**/    &none               &to BASE        &none           &none       &none           &none
                                        &none           &none           &none               /**/    &none               &none           &none
            >;
        };
    };
};
